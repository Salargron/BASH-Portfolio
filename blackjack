#!/bin/bash
# An exercise in using arrays and functions

declare -a suit=(Clubs Diamonds Hearts Spades)
declare -a value=(2 3 4 5 6 7 8 9 10 Jack Queen King Ace)
declare -a deck
declare -i currentline

bottomline=$(($(tput lines)-1))

startdeck()
{
    k=0
    for ((i=0;i<4;i++)); do
        for ((j=0;j<13;j++)); do
             deck[$k]="${value[$j]} of ${suit[$i]}"
             let k++
        done
    done
}

removecard ()
{
    maxidx=$((${#deck[@]}-1))
    for ((i=$1; i<$maxidx; i++)); do
        deck[$i]=${deck[$((i+1))]}
    done
    unset deck[$maxidx]
}

shuffle ()
{
    startdeck
    declare -a tmpdeck
    declare -i x=0

    for ((z=$1; z>0; z--)); do
        for ((y=51; y>0; y--)); do
            idx=$(($RANDOM%y))
            tmpdeck[$x]=${deck[$idx]}
            removecard $idx 
            let x++
        done
        tmpdeck[51]=${deck[0]}
        removecard 0 

        for ((x=0; x<52; x++)); do
            deck[$x]=${tmpdeck[$x]} 
        done
    done
}

deal ()
{
    unset hand
    printf "\n${deck[0]} and ${deck[1]}\n"
    removecard 0 
    removecard 0
    let currentline+=2
}
 
hit ()
{
    printf "\t${deck[0]}\n"
    removecard 0 
    let currentline++
}

newscreen ()
{
    clear
    tput sc
    tput cup $((bottomline-1)) 0
    printf "Choose:\n"
    printf "[S]huffle  [D]eal     [H]it      [N]ew Deck"
    currentline=0
}

shuffle 4
newscreen

while true; do
    if [ ${#deck[@]} -lt 2 ]; then
        shuffle 4
    fi

    tput cup $((bottomline-1)) 8 
    read sel

    if [ $currentline -gt $((bottomline - 3)) ]; then
        newscreen
    fi

    tput rc
    case $sel in
        [Ss]) shuffle 4 ;;
        [Dd]) deal ;;
        [Hh]) hit ;;
        [Nn]) clear; newscreen; tput rc ;;
        [Qq]) break ;;
    esac
    tput sc
done
clear
