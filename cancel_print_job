#!/bin/bash
# Cancel print jobs through a menu selection 
# I wrote this to give non-admin users an easy way to delete large queued print jobs.

###### Trap Ctrl-C #################################
trap ' ' 2 15
#trap `stty intr  ;exit 0` 1 3 5 15

typeset -a PRINTERS
typeset -a JOBCNT 
typeset -i LISTSZ 
typeset -a JOBNUM
typeset -a JOBSEL
typeset -a JOBINFO

Get_List()
{
  jobs=""
  unset PRINTERS
  unset JOBCNT

  ALLPRINTERS=$(lpstat -v | cut -f1 -d: | cut -f3 -d " ")
  i=0
  for j in $ALLPRINTERS; do
    k=0
    for l in $(lpstat -o $j | awk '{print $1}'); do
        let k++
    done
    if [ $k -gt 0 ]; then
        PRINTERS[$i]="$j"
        JOBCNT[$i]="$k"
        let i++
    fi
  done

  LISTSZ=${#PRINTERS[@]}
}

Print_Jobs()
{
  unset JOBINFO
  unset JOBNUM

  JOBNUM=( $(lpstat -o $1 | awk '{print $1}') )
  LISTSZ=${#JOBNUM[@]}

  for ((i=0; i < $LISTSZ; i++)); do
    JOBINFO[$i]=$(lpstat -o $1 | grep ${JOBNUM[$i]} | awk -v t="\t" ' \
                      {print $1 t $2,$3,$4,$5,$6,$7}')
  done
}

display_print_job()
{
  while (true); do
    Print_Jobs $1

    [ $LISTSZ -eq 0 ] && return 0

    clear
    echo "Print Jobs for: " "$1"
    echo "---------------------------------------------------------------------"

    l=1
    for ((i=0; i < $LISTSZ; i++, l++)); do
      printf "\t$l. ${JOBINFO[$i]}\n"
    done
    printf "\tq. Return to printer selection.\n"

    echo "---------------------------------------------------------------------"
    echo ""
    printf "Select Print Job(s) to Cancel: "; read job

    if [ "$job" = "quit" -o "$job" = "q" -o "$job" = "Q" -o "$job" = "" ]; then
      return 0
    fi

    if [ "$job" = "*" ]; then
      cancel ${JOBNUM[@]}
      sleep 3
      return 0
    fi

    isallnum $job

    if [ $? -eq 0 ]; then
      for j in $job; do
        if [ $j -gt 0 -a $j -le $LISTSZ ]; then
          cancel ${JOBNUM[$(($j - 1))]}
        fi
      done
      sleep 3
    fi

  done
}

isallnum()
{
  for a in $*; do
      for (( x=0; x<${#1}; x++ )); do
          y=$(printf "${1:$x:1}")
          ! [[ "$y" =~ "[0-9]" ]] && return 1 
      done
  done
  return 0
}

printer_selection()
{
  clear
  Get_List

  if [ $LISTSZ = 0 ]; then
    echo "There are no active print jobs."
    pause
    [ -e /tmp/prt.job ] && rm -f /tmp/prt.job > /dev/null 2>&1
    exit 
  fi

  printf "Printers:\n\n"

  for ((i=0, l=1; i<$LISTSZ; i++, l++)); do
    printf "\t$l. ${PRINTERS[$i]} has ${JOBCNT[$i]} jobs\n"
  done

  printf "\nEnter Selection (Return - Refresh, Q to quit): ";read sel

  [ "$sel" = "" ] && return

  if [ "$sel" = "quit" -o "$sel" = "q" -o "$sel" = "Q" ]; then
    [ -e /tmp/prt.job ] && rm -f /tmp/prt.job > /dev/null 2>&1
    exit
  fi

  isallnum $sel

  if [ $? -eq 0 ] && [ $sel -gt 0 -a $sel -le $LISTSZ ]; then
    let sel--
    display_print_job ${PRINTERS[$sel]}
  fi
}

################################ MAIN #########################################

while [ true ]; do
  printer_selection
done
